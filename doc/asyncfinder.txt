asyncfinder.vim for Vim version 7.0+   Last change: 5 September, 2012

Maintainer: Dmitry "troydm" Geurkov <d.geurkov@gmail.com>
Version: 0.2.6
Description: asyncfinder.vim is a simple asychronous fuzzy file finder
that searches for files in background without making you frustuated 
Last Change: 5 September, 2012
License: Vim License (see :help license)
Website: https://github.com/troydm/asyncfinder.vim

Help on using asyncfinder.vim                                     *asyncfinder.vim*

1. Introduction                    |asyncfinder.vim-intro|
2. Configuration                   |asyncfinder.vim-configuration|
2. Usage                           |asyncfinder.vim-usage|

============================================================================================
 1. INTRODUCTION                                                  *asyncfinder.vim-intro*

asyncfinder.vim - simple asynchronous fuzzy file finder for vim that won't make you wait 
for results evar! EVAR! It uses python's threading module and does pattern matching in
background thread so your vim won't get stuck and you won't get frustuated by waiting for 
results. It's quite similar to FuzzyFinder, ku, ctrl-p and unite.vim and inspired by those
plugins but is much more simple in it's functionality.

Note: this plugin is highly experimental, so it might make your vim process unstable

Platform: 
    only unix based operating systems are supported, some people say it works
    on windows based operating systems too but i haven't tested it

Requirements: 
    vim compiled with python support
    (optional) |MRU| plugin if you want to match most recently used files

============================================================================================
 2. CONFIGURATION                                        *asyncfinder.vim-configuration*

                                                         *g:asyncfinder_ignore_dirs*
g:asyncfinder_ignore_dirs     (Default: "['*.AppleDouble*','*.DS_Store*','*.git*','*.hg*','*.bzr*']")
    Ignore directories defined in this list when pattern matching files
    It also ignores those directories content including sub directories and files
    Use python's syntax to add additional directories to this list

                                                         *g:asyncfinder_ignore_files*
g:asyncfinder_ignore_files       (Default: "['*.swp']")
    Ignore files defined in this list when pattern matching
    Use python's syntax to add additional files to this list

                                                         *g:asyncfinder_initial_mode*
g:asyncfinder_initial_mode       (Default: "a")
    Initial mode that is used if no -mode= option is specified
    Use a for all, b for buffers, f for files and m for most recently used files

                                                         *g:asyncfinder_initial_pattern*
g:asyncfinder_initial_pattern    (Default: "*")
    Initial pattern match that is executed the moment asyncfinder window opens

                                                         *g:asyncfinder_match_exact*
g:asyncfinder_match_exact        (Default: "0")
    By default pattern you typed is automaticly appended with '*' as suffix and preffix
    if only pattern already doesn't contains '*' as suffix or as preffix
    For example 'myFuzzyPattern' automaticly becomes '*myFuzzyPattern*'
    And 'myFuzzyPattern*' automaticly becomes '*myFuzzyPattern*'
    If this option is enabled patterns you type are exactly matched as you typed them
    and no extra '*' symbols are appended

                                                         *g:asyncfinder_match_camel_case*
g:asyncfinder_match_camel_case   (Default: "0")
    If this option is enabled camel case patterns are fuzzy matched
    For example 'myFuzzyPattern' automaticly becomes 'my*Fuzzy*Pattern'

                                                         *g:asyncfinder_include_buffers*
g:asyncfinder_include_buffers    (Default: "1")
    Enable matching file buffers

                                                         *g:asyncfinder_include_mru_files*
g:asyncfinder_include_mru_files  (Default: "1")
    Enable matching most recently used files
    Note: this option is automaticly disabled if you don't have |MRU| plugin

                                                         *g:asyncfinder_edit_file_on_single_result*
g:asyncfinder_edit_file_on_single_result    (Default: "1")
    When enabled and if only one result is returned and enter pressed start editing this file

============================================================================================
 2. USAGE                                                         *asyncfinder.vim-usage*

                                                                  *AsyncFinder*
:AsyncFinder[!] [-mode={mode}] [{pattern}]
    Open new window and start searching for files, use |glob()| like {pattern} for matching 
    files and ** {pattern} to do recursive matching in sub-directories
    {pattern} examples:
        vim       - will match all files that have vim in there name in current directory
        *.vim     - will match all files that have .vim in there name in current directory
        **.vim    - will match all files that .vim in fullname in current and all sub-directories
        **/*.vim  - will match all files that .vim in fullname in all sub-directories
        *.vim$    - will match all .vim script files in current directory
        **.vim$   - will match all .vim script files in in current and all sub-directories
        **/*.vim$ - will match all .vim script files in all sub-directories
        ^vim      - will match all files that start with vim in current directory
    If optional [!] bang is specified it repeates previously typed {pattern}
    First line is a title status line showing current active {mode} and current
    workign directory. {mode} can be: a - search in all locations, b - only buffers, 
    f - only files and m - most recently used files. 
    Each time you start typing your {pattern} asyncfinder starts searching for files in
    background while showing it's status on first line. When asyncfinder
    searches for files the first line reads as "Searching files...". 
    When asyncfinder finished searching it reads as "Type your pattern"
    You can switch search {mode} by pressing <C-f>
    If command [-mode=] option is specified asyncfinder is started in specified {mode} otherwise 
    it uses global |g:asyncfinder_initial_mode| variable
    Results are shown under '> ' {pattern} prompt (second line)
    Each matched result is on a seperate line starting with d, f, m or b letters
    Directories start with d prefix, files with f, most recently used files
    with m and buffers with b. To edit files or buffers just move your cursor over the line 
    and press <Enter>. If <Enter> is pressed over a directory it replaces the pattern to 
    this directory name. If first result is directory and <Enter> is pressed while cursor is 
    in command prompt replaces the {pattern} with the first result directory name 
    To close result window just kill the buffer using |:bd| or press <C-q>

 vim:tw=78:ts=8:ft=help:norl:
